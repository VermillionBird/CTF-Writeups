def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('The modular inverse does not exist')
    else:
        return x % m


def main():
	d=modinv(e,r)
	m = pow(c,d,n)
	Hex = hex(m)[2:-1]
	print Hex.decode('hex')


n = 11580680829140934530890508007415759884045181178883073895384524542567658328358629988164458026850576852587618700400955898945285829866721372038447984797269506589081658113966786511458500405203686098014814607627016919350722496127296699143709543472819679005148738085332984326045462437213608382025001323516045491969128399785127750566130950683213592201

r = 11580680796443095993049365332076207876854554550946230595236714460177695534290322333524257246270369818746611293812846386861229272765404851147531402241745780797936502557487033048282334555069283059135457293990018014430389752606938064872645617664695317367490690683275692289222367127677421292985606320319286987866641589102334901210505543680000000000

e = 65537

c = 179972298797450954001465090830634403451571868705299425589354682763798011575480517698969335823064900884403519254278090725483352409073823558373873635329839032333977165814883799246747255696823393729243212064771479524621445342137424831109714724466369293935959496899756682182221047593670274585319231845162738672155525946650018339645691491423459739

main()
